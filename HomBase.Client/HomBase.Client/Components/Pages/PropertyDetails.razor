@page "/properties/{id:int}"
@using HomBase.Client.Models
@using HomBase.Client.Services
@inject PropertyService PropertyService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3 class="mb-4">Property Details</h3>

@if (property == null)
{
    <div class="alert alert-warning">Loading property details...</div>
}
else
{
    <div class="card mb-4">
        <img src="data:image/jpeg;base64,@Convert.ToBase64String(property.ImageData)" class="card-img-top" alt="Property Image" style="height: 300px; object-fit: cover;" />
        <div class="card-body">
            <h5 class="card-title">@property.Title</h5>
            <p class="card-text text-muted">Location: @property.Location</p>
            <p class="card-text">Price: @property.Price:C</p>
            <p class="card-text">Description: @property.Description</p>
            <p class="card-text">Bedrooms: @property.Bedrooms</p>
            <p class="card-text">Bathrooms: @property.Bathrooms</p>
            <p class="card-text">Size: @property.Size sqm</p>
            <p class="card-text">Date Listed: @property.DateListed.ToString("yyyy-MM-dd")</p>
            <hr />
            <h6>Interested Users:</h6>
            @if (property.Interests == null || !property.Interests.Any())
            {
                <p class="text-muted">No users have shown interest yet.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var interest in property.Interests)
                    {
                        <li class="list-group-item">User ID: @interest.UserId (Expressed interest on @interest.DateExpressed.ToString("yyyy-MM-dd"))</li>
                    }
                </ul>
            }
            <button class="btn btn-primary mt-3" @onclick="() => showEditModal = true">Edit Property</button>
            <a href="/properties" class="btn btn-primary mt-3">Back to Properties</a>
        </div>
    </div>
    
}
@if (showEditModal)
{
    <div class="modal" tabindex="-1" role="dialog" style="display: block; background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" @onclick="() => showEditModal = false">&times;</button>
                    <h5 class="modal-title">Edit Property</h5>
                </div>
                <div class="modal-body">
                    <form @onsubmit="SaveProperty">
                        <div class="form-group">
                            <label>Title</label>
                            <input type="text" class="form-control" @bind="property.Title" required />
                        </div>
                        <div class="form-group">
                            <label>Description</label>
                            <textarea class="form-control" @bind="property.Description" rows="3"></textarea>
                        </div>
                        <div class="form-group">
                            <label>Price</label>
                            <input type="number" class="form-control" @bind="property.Price" required />
                        </div>
                        <div class="form-group">
                            <label>Location</label>
                            <select class="form-control" @bind="property.Location" required>
                                <option value="JHB">Johannesburg</option>
                                <option value="PTA">Pretoria</option>
                                <option value="BFN">Bloemfontein</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Bedrooms</label>
                            <input type="number" class="form-control" @bind="property.Bedrooms" required />
                        </div>
                        <div class="form-group">
                            <label>Bathrooms</label>
                            <input type="number" class="form-control" @bind="property.Bathrooms" required />
                        </div>
                        <div class="form-group">
                            <label>Size (sqm)</label>
                            <input type="number" class="form-control" @bind="property.Size" required />
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <button type="button" class="btn btn-default" @onclick="() => showEditModal = false">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter] public int id { get; set; }
    private Property property;
    private byte[] imageData;
    private string imagePreviewUrl;
    private bool showEditModal = false;

    protected override async Task OnInitializedAsync()
    {
        property = await PropertyService.GetPropertyByIdAsync(id);
    }

    private async Task SaveProperty()
    {
        property.ImageData = imageData ?? property.ImageData;
        await PropertyService.UpdatePropertyAsync(property);
        showEditModal = false;
        NavigationManager.NavigateTo("/properties");
    }
}

